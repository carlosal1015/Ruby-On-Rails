<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-12-31T17:42:11-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Ruby on Rails’s blog</title><subtitle>Ruby on Rails.</subtitle><author><name>Oromion</name></author><entry><title type="html">Introduction to Ruby language</title><link href="http://localhost:4000/2018/12/31/introduction/" rel="alternate" type="text/html" title="Introduction to Ruby language" /><published>2018-12-31T00:00:00-05:00</published><updated>2018-12-31T00:00:00-05:00</updated><id>http://localhost:4000/2018/12/31/introduction</id><content type="html" xml:base="http://localhost:4000/2018/12/31/introduction/">&lt;!--more--&gt;

&lt;h1 id=&quot;hilberts-spaces&quot;&gt;Hilbert’s spaces&lt;/h1&gt;

&lt;p&gt;Sea &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}^\infty&lt;/script&gt; que contiene todos los vectores &lt;script type=&quot;math/tex&quot;&gt;v=(v_1,v_2,\ldots)&lt;/script&gt; con una sucesión infinita de componentes. Este espacio es actualmente muy grande cuando no existe control en el tamaño de las componentes &lt;script type=&quot;math/tex&quot;&gt;v_j&lt;/script&gt;. Una idea mucho mejor es mantener la definición familiar de &lt;em&gt;longitud&lt;/em&gt;, usando la suma de los cuadrados, e incluir solo aquellos vectores que tengan una &lt;strong&gt;longitud finita&lt;/strong&gt;.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\textbf{Longitud cuadrada}\quad \|v\|^2= v_1^2+v_2^2+v_3^2+\cdots&lt;/script&gt;

&lt;p&gt;Esta serie infinita debe converger a una suma finita. Vectores con longitud finita pueden ser sumados, multiplicados por escalares, así ellos forman un espacio vectorial. En este espacio de Hilbert es la forma natural de crecer el n煤mero de dimensiones hasta el infinito, y al mismo tiempo mantener la geometría ordinaria de un espacio euclidiano. Las elipses serán elipsoides de dimensión infinita, y rectas perpendiculares serán exactamente como antes. Los vectores &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; y &lt;script type=&quot;math/tex&quot;&gt;w&lt;/script&gt; son ortogonales cuando su producto interno es cero:&lt;/p&gt;

&lt;h2 id=&quot;hats-functions&quot;&gt;Hat’s functions&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello World'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name>Oromion</name></author><category term="hello-world" /><summary type="html"></summary></entry></feed>